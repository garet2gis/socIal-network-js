{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Dialogs/DialogItem/DialogItem.js","components/Dialogs/Message/Message.js","components/Dialogs/Dialogs.js","hoc/withAuthRedirect.js","components/Dialogs/DialogsContainer.js"],"names":["module","exports","DialogItem","props","path","id","className","classes","dialog","active","to","name","MessageStyled","styled","div","Message","message","DialogsWrapper","DialogsStyled","MessageWindowStyled","MessageWrapper","Textarea","FormControl","DialogsReduxForm","maxLengthCreator","reduxForm","form","onSubmitSuccess","formValues","dispatch","reset","onSubmit","handleSubmit","Field","placeholder","component","validate","onKeyPress","e","key","shiftKey","preventDefault","values","type","Dialogs","dialogs","messages","addMessage","dialogElements","map","d","messageElements","m","messagesEnd","useRef","useEffect","current","scrollIntoView","behavior","ref","data","mapStateToProps","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","React","connect","mapDispatchToProps","compose","dialogsPage"],"mappings":"mFACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,OAAS,wBAAwB,aAAe,8BAA8B,SAAW,0BAA0B,iBAAmB,kCAAkC,QAAU,2B,6GCYxNC,EATI,SAACC,GAChB,IAAIC,EAAI,mBAAeD,EAAME,IAC7B,OACI,qBAAKC,UAAS,UAAKC,IAAQC,OAAb,YAAuBD,IAAQE,QAA7C,SACI,cAAC,IAAD,CAASC,GAAIN,EAAb,SAAoBD,EAAMQ,U,8NCJtC,IAAMC,EAAgBC,IAAOC,IAAV,KAkBJC,EARC,SAACZ,GACb,OACI,cAACS,EAAD,CAAeN,UAAWC,IAAQS,QAAlC,SACKb,EAAMa,W,2oBCRnB,IAAMC,EAAiBJ,IAAOC,IAAV,KAKdI,EAAgBL,IAAOC,IAAV,KAKbK,EAAsBN,IAAOC,IAAV,KAMnBM,EAAiBP,IAAOC,IAAV,KA6CdO,EAAWC,YAAY,YA4BvBC,GA3BcC,YAAiB,IA2BZC,YAAU,CAACC,KAAM,UAAWC,gBAHjC,SAACC,EAAYC,GAC7BA,EAASC,YAAM,cAEML,EAxBL,SAACtB,GASjB,OACI,uBAAM4B,SAAU5B,EAAM6B,aAAtB,UACI,8BACI,cAACC,EAAA,EAAD,CAAOC,YAAa,gBAAiBvB,KAAK,UAAUwB,UAAWd,EACxDe,SAAU,GAAIC,WAZd,SAAAC,GACF,UAAVA,EAAEC,MAAkC,IAAfD,EAAEE,WACtBF,EAAEG,iBACFtC,EAAM6B,aAAa7B,EAAMuC,cAWzB,8BACI,wBAAQC,KAAO,SAAf,kCAUDC,EAlEC,SAAC,GAAqC,IAApCC,EAAmC,EAAnCA,QAASC,EAA0B,EAA1BA,SAAUC,EAAgB,EAAhBA,WAC7BC,EAAiBH,EAAQI,KAAI,SAAAC,GAAC,OAAI,cAAC,EAAD,CAAuB7C,GAAI6C,EAAE7C,GAAIM,KAAMuC,EAAEvC,MAAxBuC,EAAE7C,OACrD8C,EAAkBL,EAASG,KAAI,SAAAG,GAAC,OAAI,cAAC,EAAD,CAAoB/C,GAAI+C,EAAE/C,GAAIW,QAASoC,EAAEpC,SAA3BoC,EAAE/C,OAEpDgD,EAAcC,iBAAO,MAWzB,OAJAC,qBAAU,WACNF,EAAYG,QAAQC,eAAe,CAAEC,SAAU,WACjD,CAACZ,IAIC,eAAC7B,EAAD,WACI,cAACC,EAAD,UACK8B,IAGL,eAAC7B,EAAD,WACI,eAACC,EAAD,WACK+B,EACD,qBAAKQ,IAAKN,OAGd,cAAC9B,EAAD,CAAkBQ,SAtBf,SAAC6B,GAEZb,EAAWa,EAAK5C,UAoB8B8B,SAAYA,W,8DCzD5De,EAAkB,SAACC,GAAD,MAAY,CAChCC,OAAQD,EAAME,KAAKD,SAaRE,EAVU,SAACC,GAAe,IAC/BC,EAD8B,uKAG5B,OAAKC,KAAKjE,MAAM4D,OACT,cAACG,EAAD,eAAeE,KAAKjE,QADK,cAAC,IAAD,CAAUO,GAAG,eAHjB,GACJ2D,IAAMH,WAMtC,OAAOI,YAAQT,EAARS,CAAyBH,ICHhCI,EAAqB,CAACxB,gBAEXyB,sBACXP,EACAK,aAXkB,SAACR,GACnB,MAAO,CACHjB,QAASiB,EAAMW,YAAY5B,QAC3BC,SAAUgB,EAAMW,YAAY3B,YAQPyB,GAFdC,CAGb5B","file":"static/js/3.7b02de08.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs___FYBH\",\"active\":\"Dialogs_active__3U01P\",\"dialogsItems\":\"Dialogs_dialogsItems__2olaJ\",\"messages\":\"Dialogs_messages__2uxeN\",\"writeMessageArea\":\"Dialogs_writeMessageArea__ZF4Ex\",\"message\":\"Dialogs_message__31BUG\"};","import React from \"react\";\r\nimport classes from './../Dialogs.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst DialogItem = (props) => {\r\n    let path = `/dialogs/${props.id}`\r\n    return (\r\n        <div className={`${classes.dialog} ${classes.active}`}>\r\n            <NavLink to={path}>{props.name}</NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DialogItem;","import React from \"react\";\r\nimport classes from './../Dialogs.module.css';\r\nimport styled from \"styled-components\";\r\n\r\nconst MessageStyled = styled.div`\r\n    white-space: pre-wrap;\r\n    overflow-wrap: break-word;\r\n    border: 1px solid black;\r\n    margin: 5px 0px;\r\n    text-align:justify ;\r\n    \r\n`\r\n\r\n\r\nconst Message = (props) => {\r\n    return (\r\n        <MessageStyled className={classes.message}>\r\n            {props.message}\r\n        </MessageStyled>\r\n    )\r\n}\r\n\r\nexport default Message;","import React, {useEffect, useRef} from \"react\";\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\nimport {Field, reduxForm, reset} from \"redux-form\";\r\nimport {FormControl} from \"../common/FormsControls/FormsControls\";\r\nimport {maxLengthCreator, required} from \"../../utils/validators/validators\";\r\nimport styled from \"styled-components\";\r\n\r\n\r\nconst DialogsWrapper = styled.div`\r\n    display: flex;\r\n    width:100%;\r\n    height:100%;\r\n`\r\nconst DialogsStyled = styled.div`\r\n    display: flex;\r\n    flex-direction:column;\r\n    justify-content:space-evenly;\r\n`\r\nconst MessageWindowStyled = styled.div`\r\n    display: flex;\r\n    flex-direction:column;\r\n    flex-grow:1;\r\n    \r\n`\r\nconst MessageWrapper = styled.div`\r\n    display: flex;\r\n    flex-direction:column;\r\n    flex-grow:1;\r\n    overflow-y:scroll;\r\n    height:100px;\r\n    \r\n`\r\n\r\nconst Dialogs = ({dialogs, messages, addMessage}) => {\r\n    let dialogElements = dialogs.map(d => <DialogItem key={d.id} id={d.id} name={d.name}/>);\r\n    let messageElements = messages.map(m => <Message key={m.id} id={m.id} message={m.message}/>);\r\n\r\n    let messagesEnd = useRef(null);\r\n\r\n    let onSubmit = (data) => {\r\n\r\n        addMessage(data.message);\r\n    }\r\n\r\n    useEffect(() => {\r\n        messagesEnd.current.scrollIntoView({ behavior: \"auto\" });\r\n    },[messages]);\r\n\r\n    return (\r\n\r\n        <DialogsWrapper>\r\n            <DialogsStyled>\r\n                {dialogElements}\r\n            </DialogsStyled>\r\n\r\n            <MessageWindowStyled>\r\n                <MessageWrapper>\r\n                    {messageElements}\r\n                    <div ref={messagesEnd}/>\r\n                </MessageWrapper>\r\n\r\n                <DialogsReduxForm onSubmit={onSubmit} messages = {messages}/>\r\n            </MessageWindowStyled>\r\n        </DialogsWrapper>\r\n\r\n\r\n    )\r\n}\r\n\r\nconst Textarea = FormControl('textarea');\r\nconst maxLength50 = maxLengthCreator(50);\r\n\r\n\r\nconst DialogsForm = (props) => {\r\n    const addMessage = e => {\r\n        if(e.key === \"Enter\" && e.shiftKey === false) {\r\n            e.preventDefault();\r\n            props.handleSubmit(props.values);\r\n\r\n        }\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field placeholder={'Enter message'} name='message' component={Textarea}\r\n                       validate={[]} onKeyPress={addMessage} />\r\n            </div>\r\n            <div>\r\n                <button type = \"submit\">New message</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\nconst afterSubmit = (formValues, dispatch) =>{\r\n    dispatch(reset(\"message\"));\r\n}\r\nconst DialogsReduxForm = reduxForm({form: 'message', onSubmitSuccess:afterSubmit})(DialogsForm)\r\n\r\nexport default Dialogs;","import React from 'react';\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nconst withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component{\r\n        render() {\r\n            if (!this.props.isAuth) return (<Redirect to='/login'/>)\r\n            return <Component {...this.props}/>\r\n        }\r\n    }\r\n    return connect(mapStateToProps)(RedirectComponent);\r\n}\r\n\r\nexport default withAuthRedirect;","import {addMessage} from \"../../redux/dialogs-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {compose} from \"redux\";\r\nimport withAuthRedirect from \"../../hoc/withAuthRedirect\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogs: state.dialogsPage.dialogs,\r\n        messages: state.dialogsPage.messages\r\n    }\r\n};\r\n\r\nlet mapDispatchToProps = {addMessage};\r\n\r\nexport default compose(\r\n    withAuthRedirect,\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n)(Dialogs)\r\n"],"sourceRoot":""}