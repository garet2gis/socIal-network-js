{"version":3,"sources":["components/Profile/MyPosts/Post/Post.module.css","components/Navbar/Navbar.module.css","components/Dialogs/Dialogs.module.css","reportWebVitals.js","components/Navbar/Navbar.js","components/News/News.js","components/Music/Music.js","components/Settings/Settings.js","redux/dialogs-reducer.js","components/Dialogs/DialogItem/DialogItem.js","components/Dialogs/Message/Message.js","components/common/FormsControls/FormsControls.js","utils/validators/validators.js","components/Dialogs/Dialogs.js","hoc/withAuthRedirect.js","components/Dialogs/DialogsContainer.js","api/instance.js","api/usersAPI.js","utils/object-helpers.js","redux/users-reducer.js","assets/images/loader.svg","components/common/Preloader/Preloader.js","assets/images/userAsset.png","components/Users/User/User.js","components/common/Pagination/Pagination.js","components/Users/Users.js","redux/users-selectors.js","components/Users/UsersContainer.js","components/Profile/ProfileInfo/ProfileStatus.js","components/Profile/ProfileInfo/ProfileInfo.js","api/profileAPI.js","redux/profile-reducer.js","components/Profile/MyPosts/Post/Post.js","components/Profile/MyPosts/MyPosts.js","components/Profile/MyPosts/MyPostsContainer.js","components/Profile/Profile.js","components/Profile/ProfileContainer.js","components/Header/Header.js","api/authAPI.js","redux/auth-reducer.js","components/Header/HeaderContainer.js","components/Login/Login.js","redux/app-reducer.js","App.js","redux/redux-store.js","index.js","components/common/FormsControls/FormsControls.module.css","components/Users/User/User.module.css","components/common/Pagination/Pagination.module.css","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Header/Header.module.css"],"names":["module","exports","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Navbar","className","classes","nav","item","to","activeClassName","activeLink","News","Music","Settings","ADD_MESSAGE","initialState","dialogs","id","name","messages","message","dialogsReducer","state","action","type","newMessageBody","DialogItem","props","path","dialog","active","Message","FormControl","Element","input","meta","hasError","touched","error","formControl","required","value","maxLengthCreator","maxLength","length","Textarea","maxLength50","DialogsReduxForm","reduxForm","form","onSubmit","handleSubmit","writeMessageArea","Field","placeholder","component","validate","Dialogs","addMessage","dialogElements","map","d","messageElements","m","dialogsItems","data","mapStateToProps","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","React","connect","mapDispatchToProps","compose","dialogsPage","instance","axios","withCredentials","baseURL","headers","usersAPI","getUsers","currentPage","pageSize","get","response","follow","userId","post","unfollow","delete","updateObjectInArray","items","itemId","objPropName","newObj","u","FOLLOW","UNFOLLOW","SET_USERS","SET_CURRENT_PAGE","SET_TOTAL_USER_COUNT","TOGGLE_FETCHING","TOGGLE_FOLLOWING_PROGRESS","users","totalUsersCount","isFetching","followingInProgress","followSuccess","unfollowSuccess","setUsers","setCurrentPage","setTotalUserCount","toggleFetching","toggleFollowingProgress","usersReducer","followed","filter","Preloader","src","loader","alt","User","user","photos","small","userAsset","avatar","disabled","some","onClick","status","Pagination","onPageChanged","pagesCount","Math","ceil","pages","i","push","p","classNames","selectedPage","pageNumber","Users","createSelector","usersPage","getPageSize","getTotalUserCount","getCurrentPage","getIsFetching","getFollowingInProgress","UsersContainer","requestUsers","dispatch","a","resultCode","totalCount","ProfileStatus","useState","editMode","setEditMode","setStatus","useEffect","onDoubleClick","onChange","e","currentTarget","onBlur","updateUserStatus","autoFocus","ProfileInfo","profile","descriptionBlock","large","profilePhoto","fullName","aboutMe","profileAPI","getProfile","getStatus","updateStatus","put","ADD_POST","SET_USER_PROFILE","SET_STATUS","DELETE_POST","posts","likesCount","profileReducer","newPostText","postId","Post","likeCount","maxLength10","AddNewPostForm","MyPosts","postsElements","postsBlock","addPost","profilePage","Profile","memo","content","MyPostsContainer","ProfileContainer","match","authorizedUserId","history","setUserStatus","params","withRouter","Header","logout","loginName","login","header","loginBlock","authAPI","authMe","loginData","SET_USER_AUTH_DATA","DELETE_USER_AUTH_DATA","email","setUserAuthData","authReducer","HeaderContainer","Input","maxLength20","LoginReduxForm","formSummaryError","stopSubmit","_error","INITIALIZING_SUCCESS","isInitialized","appReducer","App","initialize","render","DialogsContainer","app","promise","Promise","all","reducers","combineReducers","formReducer","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","applyMiddleware","thunk","__store__","renderEntireTree","ReactDOM","document","getElementById","subscribe"],"mappings":"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","file":"static/js/main.1e89efc1.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__2WTmf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__3hyPE\",\"item\":\"Navbar_item__mLzkW\",\"activeLink\":\"Navbar_activeLink__1umXi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs___FYBH\",\"active\":\"Dialogs_active__3U01P\",\"dialogsItems\":\"Dialogs_dialogsItems__2olaJ\",\"messages\":\"Dialogs_messages__2uxeN\",\"writeMessageArea\":\"Dialogs_writeMessageArea__ZF4Ex\",\"message\":\"Dialogs_message__31BUG\"};","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\r\nimport classes from './Navbar.module.css'\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Navbar = () => {\r\n    return (\r\n        <nav className={classes.nav}>\r\n            <div className={classes.item}>\r\n                <NavLink to ='/profile' activeClassName = {classes.activeLink}>Profile</NavLink>\r\n            </div>\r\n            <div className={classes.item}>\r\n                <NavLink to = '/dialogs' activeClassName = {classes.activeLink}>Messages</NavLink>\r\n            </div>\r\n            <div className={classes.item}>\r\n                <NavLink to = '/news' activeClassName = {classes.activeLink}>News</NavLink>\r\n            </div>\r\n            <div className={classes.item}>\r\n                <NavLink to = '/music' activeClassName = {classes.activeLink}>Music</NavLink>\r\n            </div>\r\n            <div className={classes.item}>\r\n                <NavLink to = '/settings' activeClassName = {classes.activeLink}>Settings</NavLink>\r\n            </div>\r\n            <div className={classes.item}>\r\n                <NavLink to = '/users' activeClassName = {classes.activeLink}>Users</NavLink>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\nexport default Navbar;","import React from \"react\";\r\nimport classes from './News.module.css';\r\nconst News = () => {\r\n    return (\r\n        <div>\r\n            News\r\n        </div>\r\n    )\r\n}\r\nexport default News;","import React from \"react\";\r\nimport classes from './Music.module.css';\r\nconst Music = () => {\r\n    return (\r\n        <div>\r\n            Music\r\n        </div>\r\n    )\r\n}\r\nexport default Music;","import React from \"react\";\r\nimport classes from './Music.module.css';\r\nconst Settings = () => {\r\n    return (\r\n        <div>\r\n            Settings\r\n        </div>\r\n    )\r\n}\r\nexport default Settings;","const ADD_MESSAGE = 'ADD-MESSAGE';\r\n\r\nconst initialState = {\r\n    dialogs: [\r\n        {id: 1, name: 'Dima'},\r\n        {id: 2, name: 'Lolez'},\r\n        {id: 3, name: 'Victor'},\r\n        {id: 4, name: 'Precol'}\r\n    ],\r\n    messages: [\r\n        {id: 1, message: 'Hi!'},\r\n        {id: 2, message: 'Who are you?'},\r\n        {id: 3, message: 'You wanna go somewhere?'}\r\n    ]\r\n}\r\n\r\nconst dialogsReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_MESSAGE:\r\n            return {\r\n                ...state,\r\n                messages: [...state.messages, {id: 5, message: action.newMessageBody}]\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const addMessage = (newMessageBody) => ({type: ADD_MESSAGE, newMessageBody});\r\n\r\nexport default dialogsReducer;","import React from \"react\";\r\nimport classes from './../Dialogs.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst DialogItem = (props) => {\r\n    let path = `/dialogs/${props.id}`\r\n    return (\r\n        <div className={`${classes.dialog} ${classes.active}`}>\r\n            <NavLink to={path}>{props.name}</NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DialogItem;","import React from \"react\";\r\nimport classes from './../Dialogs.module.css';\r\n\r\nconst Message = (props) => {\r\n    return (\r\n        <div className={classes.message}>\r\n            {props.message}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Message;","import React from \"react\";\r\nimport classes from \"./FormsControls.module.css\"\r\n\r\nexport const FormControl = Element => ({input, meta, ...props}) => {\r\n    const hasError = meta.touched && meta.error;\r\n    return (\r\n        <div className={classes.formControl + \" \" + (hasError ? classes.error : \"\")}>\r\n            <div>\r\n                <Element {...input} {...props} />\r\n            </div>\r\n            {hasError && <span> {meta.error} </span>}\r\n        </div>\r\n    );\r\n};\r\n\r\n","export const required = (value) => {\r\n    if (value) return undefined;\r\n    return 'Field is required';\r\n}\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n    if (value.length <= maxLength) return undefined;\r\n    return `Max length is ${maxLength}`;\r\n}\r\n\r\n","import React from \"react\";\r\nimport classes from './Dialogs.module.css';\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {FormControl} from \"../common/FormsControls/FormsControls\";\r\nimport {maxLengthCreator, required} from \"../../utils/validators/validators\";\r\n\r\nconst Dialogs = ({dialogs,messages,addMessage}) => {\r\n    let dialogElements = dialogs.map(d => <DialogItem key = {d.id} id={d.id} name={d.name}/>);\r\n    let messageElements = messages.map(m => <Message  key = {m.id} id={m.id} message={m.message}/>);\r\n\r\n    let onSubmit = (data) => {\r\n        addMessage(data.message);\r\n    }\r\n    return (\r\n        <div className={classes.dialogs}>\r\n            <div className={classes.dialogsItems}>\r\n                {dialogElements}\r\n            </div>\r\n            <div className={classes.messages}>\r\n                {messageElements}\r\n            </div>\r\n            <DialogsReduxForm onSubmit={onSubmit}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst Textarea = FormControl('textarea');\r\nconst maxLength50 = maxLengthCreator(50);\r\n\r\n\r\nconst DialogsForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit} className={classes.writeMessageArea}>\r\n            <div>\r\n                <Field placeholder={'Enter message'} name='message' component={Textarea}\r\n                       validate={[required, maxLength50]}/>\r\n            </div>\r\n            <div>\r\n                <button>New message</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst DialogsReduxForm = reduxForm({form: 'message'})(DialogsForm)\r\n\r\nexport default Dialogs;","import React from 'react';\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nconst withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component{\r\n        render() {\r\n            if (!this.props.isAuth) return (<Redirect to='/login'/>)\r\n            return <Component {...this.props}/>\r\n        }\r\n    }\r\n    return connect(mapStateToProps)(RedirectComponent);\r\n}\r\n\r\nexport default withAuthRedirect;","import {addMessage} from \"../../redux/dialogs-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {compose} from \"redux\";\r\nimport withAuthRedirect from \"../../hoc/withAuthRedirect\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogs: state.dialogsPage.dialogs,\r\n        messages: state.dialogsPage.messages\r\n    }\r\n};\r\n\r\nlet mapDispatchToProps = {addMessage};\r\n\r\nexport default compose(\r\n    withAuthRedirect,\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n)(Dialogs)\r\n","import * as axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    headers: {\"API-KEY\":\"7e127611-be10-4a25-97f0-44bab15fc4c4\"}\r\n});\r\n\r\nexport default instance;","import instance from \"./instance\";\r\n\r\nconst usersAPI = {\r\n    getUsers: (currentPage = 1,pageSize = 10) => {\r\n        return (\r\n            instance.get(`users?page=${currentPage}&count=${pageSize}`)\r\n                .then(response => response.data)\r\n        )\r\n    },\r\n    follow: (userId) => {\r\n        return (\r\n            instance.post(`follow/${userId}`)\r\n                .then(response => response.data)\r\n        )\r\n    },\r\n    unfollow: (userId) => {\r\n        return (\r\n            instance.delete(`follow/${userId}`)\r\n                .then(response => response.data)\r\n        )\r\n    }\r\n\r\n}\r\nexport default usersAPI;","export const updateObjectInArray = (items, itemId, objPropName, newObj) => {\r\n    return items.map(u => {\r\n        if (u[objPropName] === itemId) {\r\n            return {...u, ...newObj}\r\n        }\r\n        return u;\r\n    })\r\n}\r\n","import usersAPI from \"../api/usersAPI\";\r\nimport {updateObjectInArray} from \"../utils/object-helpers\";\r\n\r\nconst FOLLOW = 'FOLLOW';\r\nconst UNFOLLOW = 'UNFOLLOW';\r\nconst SET_USERS = 'SET_USERS';\r\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\r\nconst SET_TOTAL_USER_COUNT = 'SET_TOTAL_USER_COUNT';\r\nconst TOGGLE_FETCHING = 'TOGGLE_FETCHING';\r\nconst TOGGLE_FOLLOWING_PROGRESS = 'TOGGLE_FOLLOWING_PROGRESS';\r\n\r\nconst initialState = {\r\n    users: [],\r\n    totalUsersCount: 0,\r\n    pageSize: 100,\r\n    currentPage: 1,\r\n    isFetching: true,\r\n    followingInProgress: []\r\n};\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users,action.userId,\"id\",{followed: true})\r\n            }\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users,action.userId,\"id\",{followed: false})\r\n            }\r\n        case SET_USERS:\r\n            return {\r\n                ...state,\r\n                users: [...action.users]\r\n            }\r\n        case SET_CURRENT_PAGE:\r\n            return {\r\n                ...state,\r\n                currentPage: action.currentPage\r\n            }\r\n        case SET_TOTAL_USER_COUNT:\r\n            return {\r\n                ...state,\r\n                totalUsersCount: action.totalUsersCount\r\n            }\r\n        case TOGGLE_FETCHING:\r\n            return {\r\n                ...state,\r\n                isFetching: action.isFetching\r\n            }\r\n        case TOGGLE_FOLLOWING_PROGRESS:\r\n            return {\r\n                ...state,\r\n                followingInProgress:\r\n                    action.isFetching ? [...state.followingInProgress, action.userId] : state.followingInProgress.filter(u => u !== action.userId)\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nconst followSuccess = (userId) => ({type: FOLLOW, userId});\r\nconst unfollowSuccess = (userId) => ({type: UNFOLLOW, userId});\r\nexport const setUsers = (users) => ({type: SET_USERS, users});\r\nexport const setCurrentPage = (currentPage) => ({type: SET_CURRENT_PAGE, currentPage});\r\nexport const setTotalUserCount = (totalUsersCount) => ({type: SET_TOTAL_USER_COUNT, totalUsersCount});\r\nexport const toggleFetching = (isFetching) => ({type: TOGGLE_FETCHING, isFetching});\r\nexport const toggleFollowingProgress = (isFetching, userId) => ({type: TOGGLE_FOLLOWING_PROGRESS, isFetching, userId});\r\n\r\nexport const follow = (userId) => async (dispatch) => {\r\n    dispatch(toggleFollowingProgress(true, userId));\r\n    const data = await usersAPI.follow(userId);\r\n    if (data.resultCode === 0) {\r\n        dispatch(followSuccess(userId));\r\n    }\r\n    dispatch(toggleFollowingProgress(false, userId));\r\n}\r\n\r\nexport const unfollow = (userId) => async (dispatch) => {\r\n    dispatch(toggleFollowingProgress(true, userId));\r\n    const data = await usersAPI.unfollow(userId)\r\n    if (data.resultCode === 0) {\r\n        dispatch(unfollowSuccess(userId));\r\n    }\r\n    dispatch(toggleFollowingProgress(false, userId));\r\n\r\n}\r\n\r\n\r\nexport const requestUsers = (currentPage, pageSize) => async (dispatch) => {\r\n    dispatch(setCurrentPage(currentPage));\r\n    dispatch(toggleFetching(true));\r\n    const data = await usersAPI.getUsers(currentPage, pageSize)\r\n    dispatch(toggleFetching(false));\r\n    dispatch(setUsers(data.items));\r\n    dispatch(setTotalUserCount(data.totalCount));\r\n\r\n}\r\n\r\nexport default usersReducer;","export default __webpack_public_path__ + \"static/media/loader.fd8746b8.svg\";","import React from \"react\";\r\nimport loader from '../../../assets/images/loader.svg'\r\n\r\n\r\nlet Preloader = () => {\r\n    return (\r\n        <div>\r\n            <img src = {loader} alt = 'loader'/>\r\n        </div>\r\n    )\r\n}\r\nexport default Preloader;","export default __webpack_public_path__ + \"static/media/userAsset.73a0bc1f.png\";","import React from \"react\";\r\nimport classes from './User.module.css';\r\nimport userAsset from '../../../assets/images/userAsset.png'\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nlet User = (props) => {\r\n    return (\r\n        <div className={classes.user}>\r\n            <div>\r\n                <NavLink to={`/profile/${props.user.id}`}>\r\n                    <img src={props.user.photos.small === null ? userAsset : props.user.photos.small}\r\n                         className={classes.avatar} alt=\"user\"/>\r\n                </NavLink>\r\n            </div>\r\n            <div>\r\n                {props.user.followed\r\n                    ? <button disabled={props.followingInProgress.some(u=>u===props.user.id)} onClick={\r\n                        () => {props.unfollow(props.user.id);}\r\n                    }>Unfollow</button>\r\n                    : <button disabled={props.followingInProgress.some(u=>u===props.user.id)} onClick={\r\n                        () => {props.follow(props.user.id);}\r\n                    }>Follow</button>}\r\n            </div>\r\n            <div>{props.user.name}</div>\r\n            <div>{props.user.status}</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default User;","import React from \"react\";\r\nimport classes from './Pagination.module.css'\r\nimport classNames from 'classnames'\r\n\r\nlet Pagination = ({totalUsersCount,pageSize,currentPage,onPageChanged}) => {\r\n    let pagesCount = Math.ceil(totalUsersCount / pageSize);\r\n    let pages = [];\r\n    for (let i = 1; i <= pagesCount; i++) pages.push(i);\r\n\r\n    return (\r\n        <div>\r\n            {\r\n                pages.map(p => {\r\n                    return <span\r\n                        className={classNames(currentPage === p && classes.selectedPage, classes.pageNumber)}\r\n                        onClick={() => {\r\n                            onPageChanged(p);\r\n                        }} key={p}>{` ${p} `}</span>\r\n                })\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Pagination;","import React from \"react\";\r\nimport Preloader from \"../common/Preloader/Preloader\";\r\nimport User from \"./User/User\";\r\nimport Pagination from \"../common/Pagination/Pagination\";\r\n\r\nlet Users = (props) => {\r\n    let users = props.users.map(u => <User key={u.id} user={u} follow={props.follow}\r\n                                           unfollow={props.unfollow}\r\n                                           followingInProgress={props.followingInProgress}\r\n    />);\r\n    return (\r\n        <div>\r\n            {props.isFetching ? <Preloader/> : null}\r\n            <Pagination totalUsersCount={props.totalUsersCount}\r\n                        pageSize={props.pageSize}\r\n                        currentPage={props.currentPage}\r\n                        onPageChanged={props.onPageChanged}/>\r\n            {users}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Users;","import {createSelector} from \"reselect\";\r\n\r\nconst getUsersSelector = (state) => {\r\n    return state.usersPage.users;\r\n}\r\n\r\n// More complicated and smart selector, but useless in this program\r\nexport const getUsers = createSelector(getUsersSelector,\r\n    (users) => {\r\n        //some calculations\r\n        return users.filter((u) => true);\r\n    }\r\n)\r\n\r\nexport const getPageSize = (state) => {\r\n    return state.usersPage.pageSize;\r\n}\r\n\r\nexport const getTotalUserCount = (state) => {\r\n    return state.usersPage.totalUsersCount;\r\n}\r\n\r\nexport const getCurrentPage = (state) => {\r\n    return state.usersPage.currentPage;\r\n}\r\n\r\nexport const getIsFetching = (state) => {\r\n    return state.usersPage.isFetching;\r\n}\r\n\r\nexport const getFollowingInProgress = (state) => {\r\n    return state.usersPage.followingInProgress;\r\n}\r\n\r\n","import {connect} from \"react-redux\";\r\nimport {\r\n    follow, requestUsers,\r\n    setCurrentPage,\r\n    setTotalUserCount,\r\n    setUsers,\r\n    toggleFetching,\r\n    unfollow\r\n} from \"../../redux/users-reducer\";\r\nimport Users from \"./Users\";\r\nimport React from \"react\";\r\nimport {compose} from \"redux\";\r\nimport {\r\n    getCurrentPage,\r\n    getFollowingInProgress,\r\n    getIsFetching,\r\n    getPageSize,\r\n    getTotalUserCount,\r\n    getUsers\r\n} from \"../../redux/users-selectors\";\r\n\r\nclass UsersContainer extends React.Component {\r\n    componentDidMount() {\r\n        const {requestUsers,currentPage,pageSize} = this.props;\r\n        requestUsers(currentPage, pageSize);\r\n    }\r\n\r\n    onPageChanged = (currentPage) => {\r\n        const {requestUsers,pageSize} = this.props;\r\n        requestUsers(currentPage, pageSize);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Users onPageChanged={this.onPageChanged} {...this.props}/>\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        users: getUsers(state),\r\n        pageSize: getPageSize(state),\r\n        totalUsersCount: getTotalUserCount(state),\r\n        currentPage: getCurrentPage(state),\r\n        isFetching: getIsFetching(state),\r\n        followingInProgress: getFollowingInProgress(state)\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = {follow, unfollow, setUsers, setCurrentPage, setTotalUserCount, toggleFetching, requestUsers};\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n)(UsersContainer)\r\n","import React, {useEffect, useState} from 'react';\r\n\r\nconst ProfileStatus = (props) => {\r\n\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n    useEffect(()=>{\r\n        setStatus(props.status);\r\n    },[props.status])\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true)\r\n    }\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateUserStatus(status);\r\n    }\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value)\r\n    }\r\n    return (\r\n        <div>\r\n            {!editMode &&\r\n            <div>\r\n                <span onDoubleClick={activateEditMode}>{props.status || '----'}</span>\r\n            </div>}\r\n\r\n            {editMode &&\r\n            <div>\r\n                <input onChange={onStatusChange} onBlur={deactivateEditMode} autoFocus={true} value={status}/>\r\n            </div>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileStatus;","import React from 'react';\r\nimport classes from './ProfileInfo.module.css';\r\nimport Preloader from '../../common/Preloader/Preloader';\r\nimport userAsset from '../../../assets/images/userAsset.png'\r\nimport ProfileStatus from \"./ProfileStatus\";\r\n\r\nconst ProfileInfo = (props) => {\r\n    if (!props.profile) {\r\n        return (\r\n            <Preloader/>\r\n        )\r\n    }\r\n    return (\r\n        <div>\r\n            <div className={classes.descriptionBlock}>\r\n                <img src={props.profile.photos.large ? props.profile.photos.large:userAsset} className={classes.profilePhoto} alt='avatar'/>\r\n                <ProfileStatus status={props.status} updateUserStatus={props.updateUserStatus}/>\r\n                <div>{props.profile.fullName}</div>\r\n                <div>{props.profile.aboutMe}</div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default ProfileInfo;","import instance from \"./instance\";\r\n\r\nconst profileAPI = {\r\n    getProfile: (userId) => {\r\n        return (\r\n            instance.get(`profile/${userId}`)\r\n                .then(response => response.data)\r\n        )\r\n    },\r\n    getStatus: (userId) => {\r\n        return (\r\n            instance.get(`profile/status/${userId}`)\r\n                .then(response => response.data)\r\n        )\r\n    },\r\n    updateStatus: (status) => {\r\n        return (\r\n            instance.put(`profile/status`, {status})\r\n                .then(response => response.data)\r\n        )\r\n    }\r\n}\r\n\r\nexport default profileAPI;","import profileAPI from '../api/profileAPI';\r\n\r\nconst ADD_POST = 'ADD-POST';\r\nconst SET_USER_PROFILE = 'SET_USER_PROFILE';\r\nconst SET_STATUS = 'SET_STATUS';\r\nconst DELETE_POST = 'DELETE_POST';\r\n\r\nconst initialState = {\r\n    posts: [\r\n        {id: 1, message: 'hey, nibba', likesCount: 228},\r\n        {id: 2, message: 'get the fuck out', likesCount: 9},\r\n        {id: 3, message: 'It is my first post', likesCount: 3}\r\n    ],\r\n    profile: null,\r\n    status: 'default status'\r\n};\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_POST:\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, {id: 5, message: action.newPostText, likesCount: 0}],\r\n            }\r\n        case DELETE_POST:\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts.filter(p => p.id !== action.postId)],\r\n            }\r\n        case SET_USER_PROFILE:\r\n            return {\r\n                ...state,\r\n                profile: action.profile\r\n            }\r\n        case SET_STATUS:\r\n            return {\r\n                ...state,\r\n                status: action.status\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const addPost = (newPostText) => ({type: ADD_POST, newPostText});\r\n\r\n\r\nexport const setUserProfile = (profile) =>\r\n    ({type: SET_USER_PROFILE, profile});\r\n\r\nexport const setStatus = (status) =>\r\n    ({type: SET_STATUS, status});\r\n\r\nexport const deletePost = (postId) =>\r\n    ({type: DELETE_POST, postId});\r\n\r\n\r\nexport const getProfile = (userId) => async (dispatch) => {\r\n    const data = await profileAPI.getProfile(userId);\r\n    dispatch(setUserProfile(data));\r\n}\r\n\r\nexport const setUserStatus = (userId) => async (dispatch) => {\r\n    const data = await profileAPI.getStatus(userId);\r\n    dispatch(setStatus(data));\r\n}\r\n\r\nexport const updateUserStatus = (status) => async (dispatch) => {\r\n    const data = await profileAPI.updateStatus(status);\r\n    if (data.resultCode === 0)\r\n        dispatch(setStatus(status));\r\n}\r\n\r\n\r\nexport default profileReducer;","import React from \"react\";\r\nimport classes from './Post.module.css';\r\n\r\nconst Post = (props) => {\r\n    return (\r\n        <div className={classes.item}>\r\n            <img src={'https://w7.pngwing.com/pngs/642/857/png-transparent-internet-meme-redemption-white-sticker-meme.png'}/>\r\n            {props.message}\r\n            <div>\r\n                <span>like {props.likeCount}</span>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default Post;","import React from \"react\";\r\nimport classes from './MyPosts.module.css';\r\nimport Post from \"./Post/Post\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../../utils/validators/validators\";\r\nimport {FormControl} from \"../../common/FormsControls/FormsControls\";\r\n\r\nconst maxLength10 = maxLengthCreator(10);\r\nconst Textarea = FormControl('textarea');\r\n\r\nconst MyPosts = (props) => {\r\n    let postsElements =\r\n        props.posts.map(p => <Post message={p.message} likeCount={p.likesCount} key={p.id}/>);\r\n\r\n    let onAddPost = (data) => {\r\n        props.addPost(data.newPostText);\r\n    }\r\n\r\n    return (\r\n        <div className={classes.postsBlock}>\r\n            <h3>My posts</h3>\r\n            <AddNewPostForm onSubmit={onAddPost}/>\r\n            <div className={classes.posts}>\r\n                {postsElements}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nlet AddNewPostForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field placeholder={'Enter post'} name='newPostText' component={Textarea}\r\n                       validate={[required, maxLength10]}/>\r\n            </div>\r\n            <div>\r\n                <button>Add post</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nAddNewPostForm = reduxForm({form: 'AddNewPostForm'})(AddNewPostForm);\r\n\r\nexport default MyPosts;","import {addPost} from \"../../../redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, {addPost})(MyPosts);\r\n\r\n","import React from \"react\";\r\nimport classes from './Profile.module.css';\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\nconst Profile = React.memo((props) => {\r\n    return (\r\n        <div className={classes.content}>\r\n            <ProfileInfo {...props}/>\r\n            <MyPostsContainer/>\r\n        </div>\r\n    )\r\n})\r\nexport default Profile;","import React from \"react\";\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {getProfile, setUserStatus, updateUserStatus} from \"../../redux/profile-reducer\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {compose} from \"redux\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n    componentDidMount() {\r\n        const {match,authorizedUserId,history,getProfile,setUserStatus} = this.props;\r\n        let userId = match.params.userId;\r\n        if (!userId) {\r\n            userId = authorizedUserId;\r\n            if (!userId) {\r\n                history.push('/login');\r\n            }\r\n        }\r\n        getProfile(userId);\r\n        setUserStatus(userId);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Profile profile={this.props.profile} status={this.props.status}\r\n                     updateUserStatus={this.props.updateUserStatus}/>\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n        profile: state.profilePage.profile,\r\n        status: state.profilePage.status,\r\n        isAuth: state.auth.isAuth,\r\n        authorizedUserId: state.auth.id\r\n    });\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {getProfile, setUserStatus, updateUserStatus}),\r\n    withRouter\r\n    //withAuthRedirect\r\n)\r\n(ProfileContainer)\r\n","import React from \"react\";\r\nimport classes from './Header.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Header = ({isAuth, logout, login: loginName}) => {\r\n    return <header className={classes.header}>\r\n        <img src='https://i.pinimg.com/originals/9a/3b/90/9a3b902ff415e1a95368f1bf2b9ecca8.png' alt='logo'/>\r\n        <div className={classes.loginBlock}>\r\n            {isAuth &&\r\n            <div>{loginName} - <button onClick={logout}>Logout</button></div>}\r\n            {!isAuth &&\r\n            <NavLink to='/login'>Login</NavLink>}\r\n        </div>\r\n    </header>\r\n}\r\nexport default Header;","import instance from \"./instance\";\r\n\r\nconst authAPI = {\r\n    authMe: () => {\r\n        return (\r\n            instance.get(`auth/me`)\r\n                .then(response => response.data)\r\n        )\r\n    },\r\n    login: (loginData) => {\r\n        return (\r\n            instance.post(`auth/login`,loginData)\r\n                .then(response => response.data)\r\n        )\r\n    },\r\n    logout: () => {\r\n        return (\r\n            instance.delete(`auth/login`)\r\n                .then(response => response.data)\r\n        )\r\n    }\r\n}\r\nexport default authAPI;\r\n","import authAPI from \"../api/authAPI\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\nconst SET_USER_AUTH_DATA = 'SET_USER_AUTH_DATA';\r\nconst DELETE_USER_AUTH_DATA = 'DELETE_USER_AUTH_DATA';\r\n\r\nconst initialState = {\r\n    id: null,\r\n    login: null,\r\n    email: null,\r\n    isAuth: false\r\n};\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_USER_AUTH_DATA:\r\n            return {\r\n                ...state,\r\n                ...action.data,\r\n                isAuth: true\r\n            }\r\n        case DELETE_USER_AUTH_DATA:\r\n            return {\r\n                ...state,\r\n                id: null,\r\n                login: null,\r\n                email: null,\r\n                isAuth: false\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const setUserAuthData = (data) => ({type: SET_USER_AUTH_DATA, data});\r\nexport const deleteUserAuthData = () => ({type: DELETE_USER_AUTH_DATA});\r\n\r\n\r\nexport const authMe = () => async (dispatch) => {\r\n    const data = await authAPI.authMe();\r\n    if (data.resultCode === 0)\r\n        dispatch(setUserAuthData(data.data));\r\n};\r\n\r\nexport const login = (loginData) => async (dispatch) => {\r\n    let data = await authAPI.login(loginData);\r\n    if (data.resultCode === 0)\r\n        dispatch(authMe());\r\n    else {\r\n        dispatch(stopSubmit('login', {_error: data.messages.length > 0 ? data.messages[0] : 'Some error'}));\r\n    }\r\n};\r\n\r\nexport const logout = () => async (dispatch) => {\r\n    let data = await authAPI.logout();\r\n    if (data.resultCode === 0)\r\n        dispatch(deleteUserAuthData())\r\n};\r\n\r\nexport default authReducer;","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport Header from \"./Header\";\r\nimport {logout} from \"../../redux/auth-reducer\";\r\n\r\nclass HeaderContainer extends React.Component {\r\n    render() {\r\n        return <Header {...this.props}/>\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    login:state.auth.login,\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport default connect(mapStateToProps, {logout})(HeaderContainer);","import React from 'react';\r\nimport {Field, reduxForm} from 'redux-form';\r\nimport {login} from \"../../redux/auth-reducer\";\r\nimport {connect} from \"react-redux\";\r\nimport {FormControl} from \"../common/FormsControls/FormsControls\";\r\nimport {maxLengthCreator, required} from \"../../utils/validators/validators\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport classes from \"../common/FormsControls/FormsControls.module.css\"\r\n\r\nconst Login = (props) => {\r\n    if (props.isAuth) {\r\n        return <Redirect to='/Profile'/>\r\n    }\r\n    let onSubmit = (data) => {\r\n        props.login(data);\r\n    }\r\n    return (\r\n        <div>\r\n            <h1>Login</h1>\r\n            <LoginReduxForm onSubmit={onSubmit}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst Input = FormControl('input');\r\nconst maxLength20 = maxLengthCreator(20);\r\n\r\n\r\nconst LoginForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field placeholder={'Email'} name='email' component={Input}\r\n                       validate={[required, maxLength20]}/>\r\n            </div>\r\n            <div>\r\n                <Field placeholder={'Password'} name='password' component={Input}\r\n                       type='password'\r\n                       validate={[required, maxLength20]}/>\r\n            </div>\r\n            <div>\r\n                <Field type={'checkbox'} name='rememberMe' component='input'/> remember me\r\n            </div>\r\n\r\n            {props.error &&\r\n                <div className={classes.formSummaryError}>{props.error}</div>}\r\n\r\n            <div>\r\n                <button>Login</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst LoginReduxForm = reduxForm({form: 'login'})(LoginForm)\r\n\r\nlet mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport default connect(mapStateToProps, {login})(Login);","import {authMe} from \"./auth-reducer\";\r\n\r\nconst INITIALIZING_SUCCESS = 'INITIALIZING_SUCCESS';\r\n\r\nconst initialState = {\r\n    isInitialized: false\r\n};\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case INITIALIZING_SUCCESS:\r\n            return {\r\n                ...state,\r\n                isInitialized: true\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nconst setInitialized = () => ({type: INITIALIZING_SUCCESS});\r\n\r\n\r\nexport const initialize = () => (dispatch) => {\r\n    let promise = dispatch(authMe());\r\n    Promise.all([promise])\r\n        .then(()=>{\r\n            dispatch(setInitialized());\r\n        })\r\n};\r\n\r\nexport default appReducer;","import './App.css';\nimport Navbar from \"./components/Navbar/Navbar\";\nimport News from \"./components/News/News\";\nimport Music from \"./components/Music/Music\";\nimport Settings from \"./components/Settings/Settings\";\nimport React from \"react\";\nimport {Route} from \"react-router-dom\";\nimport DialogsContainer from \"./components/Dialogs/DialogsContainer\";\nimport UsersContainer from \"./components/Users/UsersContainer\";\nimport ProfileContainer from \"./components/Profile/ProfileContainer\";\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\nimport Login from \"./components/Login/Login\";\nimport {connect} from \"react-redux\";\nimport {initialize} from \"./redux/app-reducer\";\nimport {compose} from \"redux\";\nimport Preloader from \"./components/common/Preloader/Preloader\";\n\nclass App extends React.Component {\n    componentDidMount() {\n        this.props.initialize();\n    }\n\n    render() {\n        if (!this.props.isInitialized) {\n            return <Preloader/>\n        }\n        return (\n            <div className='app-wrapper'>\n                <HeaderContainer/>\n                <Navbar/>\n                <div className={'app-wrapper-content'}>\n                    <Route path='/dialogs' render={() => <DialogsContainer/>}/>\n                    <Route path='/profile/:userId?'\n                           render={() => <ProfileContainer/>}/>\n                    <Route path='/news' render={() => <News/>}/>\n                    <Route path='/music' render={() => <Music/>}/>\n                    <Route path='/settings' render={() => <Settings/>}/>\n                    <Route path='/users' render={() => <UsersContainer/>}/>\n                    <Route path='/login' render={() => <Login/>}/>\n\n                </div>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    isInitialized: state.app.isInitialized\n})\n\nexport default compose(\n    connect(mapStateToProps, {initialize})\n)(App);","import {applyMiddleware, combineReducers, compose, createStore} from \"redux\";\r\nimport profileReducer from \"./profile-reducer\";\r\nimport dialogsReducer from \"./dialogs-reducer\";\r\nimport usersReducer from \"./users-reducer\";\r\nimport authReducer from \"./auth-reducer\";\r\nimport {reducer as formReducer} from 'redux-form'\r\nimport thunk from 'redux-thunk';\r\nimport appReducer from \"./app-reducer\";\r\n\r\nlet reducers = combineReducers({\r\n        profilePage: profileReducer,\r\n        dialogsPage: dialogsReducer,\r\n        usersPage: usersReducer,\r\n        auth: authReducer,\r\n        form: formReducer,\r\n        app: appReducer\r\n    }\r\n);\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(thunk)));\r\n\r\nexport default store;\r\nwindow.__store__ = store;","import React from 'react';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport store from \"./redux/redux-store\";\nimport {BrowserRouter} from \"react-router-dom\";\nimport {Provider} from \"react-redux\";\n\n\nexport let renderEntireTree = () => {\n    ReactDOM.render(\n        <BrowserRouter>\n            <Provider store={store}>\n                {/*<React.StrictMode>*/}\n                    <App/>\n                {/*</React.StrictMode>*/}\n            </Provider>\n        </BrowserRouter>,\n        document.getElementById('root')\n    );\n}\n\nrenderEntireTree();\n\nstore.subscribe(renderEntireTree);\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__2YQaU\",\"error\":\"FormsControls_error__3g4FW\",\"formSummaryError\":\"FormsControls_formSummaryError__PAkJW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"avatar\":\"User_avatar__2LoF5\",\"user\":\"User_user__1f7S8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pageNumber\":\"Pagination_pageNumber__3nXTM\",\"selectedPage\":\"Pagination_selectedPage__38Dd4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__18SIW\",\"profilePhoto\":\"ProfileInfo_profilePhoto__1Wkiq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"MyPosts_item__3_JxA\",\"postsBlock\":\"MyPosts_postsBlock__jJmdn\",\"posts\":\"MyPosts_posts__owaNI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__3qvaw\",\"loginBlock\":\"Header_loginBlock__uMNK_\"};"],"sourceRoot":""}