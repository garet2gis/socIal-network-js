{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Dialogs/DialogItem/DialogItem.js","components/Dialogs/Message/Message.js","components/Dialogs/Dialogs.js","hoc/withAuthRedirect.js","components/Dialogs/DialogsContainer.js"],"names":["module","exports","DialogItem","props","path","id","className","classes","dialog","active","to","name","Message","message","Textarea","FormControl","maxLength50","maxLengthCreator","DialogsReduxForm","reduxForm","form","onSubmit","handleSubmit","writeMessageArea","Field","placeholder","component","validate","required","Dialogs","dialogs","messages","addMessage","dialogElements","map","d","messageElements","m","dialogsItems","data","mapStateToProps","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","React","connect","mapDispatchToProps","compose","dialogsPage"],"mappings":"mFACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,OAAS,wBAAwB,aAAe,8BAA8B,SAAW,0BAA0B,iBAAmB,kCAAkC,QAAU,2B,sGCYxNC,EATI,SAACC,GAChB,IAAIC,EAAI,mBAAeD,EAAME,IAC7B,OACI,qBAAKC,UAAS,UAAKC,IAAQC,OAAb,YAAuBD,IAAQE,QAA7C,SACI,cAAC,IAAD,CAASC,GAAIN,EAAb,SAAoBD,EAAMQ,UCGvBC,EARC,SAACT,GACb,OACI,qBAAKG,UAAWC,IAAQM,QAAxB,SACKV,EAAMU,W,kCCsBbC,EAAWC,YAAY,YACvBC,EAAcC,YAAiB,IAiB/BC,EAAmBC,YAAU,CAACC,KAAM,WAAjBD,EAdL,SAAChB,GACjB,OACI,uBAAMkB,SAAUlB,EAAMmB,aAAchB,UAAWC,IAAQgB,iBAAvD,UACI,8BACI,cAACC,EAAA,EAAD,CAAOC,YAAa,gBAAiBd,KAAK,UAAUe,UAAWZ,EACxDa,SAAU,CAACC,IAAUZ,OAEhC,8BACI,yDAQDa,EAxCC,SAAC,GAAmC,IAAlCC,EAAiC,EAAjCA,QAAQC,EAAyB,EAAzBA,SAASC,EAAgB,EAAhBA,WAC3BC,EAAiBH,EAAQI,KAAI,SAAAC,GAAC,OAAI,cAAC,EAAD,CAAyB9B,GAAI8B,EAAE9B,GAAIM,KAAMwB,EAAExB,MAAxBwB,EAAE9B,OACvD+B,EAAkBL,EAASG,KAAI,SAAAG,GAAC,OAAI,cAAC,EAAD,CAAuBhC,GAAIgC,EAAEhC,GAAIQ,QAASwB,EAAExB,SAA3BwB,EAAEhC,OAK3D,OACI,sBAAKC,UAAWC,IAAQuB,QAAxB,UACI,qBAAKxB,UAAWC,IAAQ+B,aAAxB,SACKL,IAEL,qBAAK3B,UAAWC,IAAQwB,SAAxB,SACKK,IAEL,cAAClB,EAAD,CAAkBG,SAXX,SAACkB,GACZP,EAAWO,EAAK1B,gB,8DCRlB2B,EAAkB,SAACC,GAAD,MAAY,CAChCC,OAAQD,EAAME,KAAKD,SAaRE,EAVU,SAACC,GAAe,IAC/BC,EAD8B,uKAG5B,OAAKC,KAAK5C,MAAMuC,OACT,cAACG,EAAD,eAAeE,KAAK5C,QADK,cAAC,IAAD,CAAUO,GAAG,eAHjB,GACJsC,IAAMH,WAMtC,OAAOI,YAAQT,EAARS,CAAyBH,ICHhCI,EAAqB,CAAClB,gBAEXmB,sBACXP,EACAK,aAXkB,SAACR,GACnB,MAAO,CACHX,QAASW,EAAMW,YAAYtB,QAC3BC,SAAUU,EAAMW,YAAYrB,YAQPmB,GAFdC,CAGbtB","file":"static/js/3.4778003a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs___FYBH\",\"active\":\"Dialogs_active__3U01P\",\"dialogsItems\":\"Dialogs_dialogsItems__2olaJ\",\"messages\":\"Dialogs_messages__2uxeN\",\"writeMessageArea\":\"Dialogs_writeMessageArea__ZF4Ex\",\"message\":\"Dialogs_message__31BUG\"};","import React from \"react\";\r\nimport classes from './../Dialogs.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst DialogItem = (props) => {\r\n    let path = `/dialogs/${props.id}`\r\n    return (\r\n        <div className={`${classes.dialog} ${classes.active}`}>\r\n            <NavLink to={path}>{props.name}</NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DialogItem;","import React from \"react\";\r\nimport classes from './../Dialogs.module.css';\r\n\r\nconst Message = (props) => {\r\n    return (\r\n        <div className={classes.message}>\r\n            {props.message}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Message;","import React from \"react\";\r\nimport classes from './Dialogs.module.css';\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {FormControl} from \"../common/FormsControls/FormsControls\";\r\nimport {maxLengthCreator, required} from \"../../utils/validators/validators\";\r\n\r\nconst Dialogs = ({dialogs,messages,addMessage}) => {\r\n    let dialogElements = dialogs.map(d => <DialogItem key = {d.id} id={d.id} name={d.name}/>);\r\n    let messageElements = messages.map(m => <Message  key = {m.id} id={m.id} message={m.message}/>);\r\n\r\n    let onSubmit = (data) => {\r\n        addMessage(data.message);\r\n    }\r\n    return (\r\n        <div className={classes.dialogs}>\r\n            <div className={classes.dialogsItems}>\r\n                {dialogElements}\r\n            </div>\r\n            <div className={classes.messages}>\r\n                {messageElements}\r\n            </div>\r\n            <DialogsReduxForm onSubmit={onSubmit}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst Textarea = FormControl('textarea');\r\nconst maxLength50 = maxLengthCreator(50);\r\n\r\n\r\nconst DialogsForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit} className={classes.writeMessageArea}>\r\n            <div>\r\n                <Field placeholder={'Enter message'} name='message' component={Textarea}\r\n                       validate={[required, maxLength50]}/>\r\n            </div>\r\n            <div>\r\n                <button>New message</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst DialogsReduxForm = reduxForm({form: 'message'})(DialogsForm)\r\n\r\nexport default Dialogs;","import React from 'react';\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nconst withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component{\r\n        render() {\r\n            if (!this.props.isAuth) return (<Redirect to='/login'/>)\r\n            return <Component {...this.props}/>\r\n        }\r\n    }\r\n    return connect(mapStateToProps)(RedirectComponent);\r\n}\r\n\r\nexport default withAuthRedirect;","import {addMessage} from \"../../redux/dialogs-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {compose} from \"redux\";\r\nimport withAuthRedirect from \"../../hoc/withAuthRedirect\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogs: state.dialogsPage.dialogs,\r\n        messages: state.dialogsPage.messages\r\n    }\r\n};\r\n\r\nlet mapDispatchToProps = {addMessage};\r\n\r\nexport default compose(\r\n    withAuthRedirect,\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n)(Dialogs)\r\n"],"sourceRoot":""}